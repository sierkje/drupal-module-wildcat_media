<?php

/**
 * @file
 * Installation and update functions for the Wildcat Media module.
 */

use Drupal\Core\Config\ExtensionInstallStorage;
use Drupal\media_entity\Entity\MediaBundle;
use Drupal\views\Entity\View;

/**
 * Implements hook_install().
 */
function wildcat_media_install() {
  /** @var \Drupal\views\ViewEntityInterface $view */
  if ($view = View::load('media')) {
    // Disable the view provided by media_entity, we provide our own.
    $view->setStatus(TRUE);
    $view->save();
  }

  // Ensure cache tags for existing media bundles in media library view.
  /** @var \Drupal\media_entity\MediaBundleInterface $media_bundle */
  foreach (MediaBundle::loadMultiple() as $media_bundle) {
    wildcat_media_media_bundle_insert($media_bundle);
  }

  // Copy the document icon files.
  $icons_source = drupal_get_path('module', 'wildcat_media') . '/images/icons';
  $icons_dest = \Drupal::config('media_entity.settings')->get('icon_base');
  media_entity_copy_icons($icons_source, $icons_dest);

  // Add an icon for the media embed browser, if configuration is not syncing.
  if (!\Drupal::isConfigSyncing()) {
    /** @var \Drupal\Core\Config\StorageInterface $config_storage */
    $config_storage = \Drupal::service('config.storage');
    $button_uuid = (new ExtensionInstallStorage($config_storage))
      ->read('embed.button.wildcat_media_embed')['icon_uuid'];
    $button_source = '/images/wildcat-media-browser.png';
    $button_dest = 'public://wildcat-media-browser.png';

    $button_data = file_get_contents(dirname(__FILE__) . $button_source);
    $button = file_save_data($button_data, $button_dest, FILE_EXISTS_REPLACE);
    // Set file uuid same as default config.
    $button->set('uuid', $button_uuid)->save();
  }
}

/**
 * Implements hook_install().
 */
function wildcat_media_uninstall() {
  /** @var \Drupal\views\ViewEntityInterface $view */
  if ($view = View::load('media')) {
    // Enable the view provided by media_entity, it was disabled during install.
    $view->setStatus(TRUE);
    $view->save();
  }
}
